<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.0">Jekyll</generator><link href="https://lulubeanana17.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://lulubeanana17.github.io/" rel="alternate" type="text/html" /><updated>2021-09-18T15:35:00+12:00</updated><id>https://lulubeanana17.github.io/feed.xml</id><title type="html">Siyoon Jung</title><subtitle>Any knowledges about software fundamental &amp; technics</subtitle><entry><title type="html">difference between compile and interpret</title><link href="https://lulubeanana17.github.io/difference-between-compile-and-interpret" rel="alternate" type="text/html" title="difference between compile and interpret" /><published>2021-09-18T04:40:00+12:00</published><updated>2021-09-18T04:40:00+12:00</updated><id>https://lulubeanana17.github.io/difference%20between%20compile%20and%20interpret</id><content type="html" xml:base="https://lulubeanana17.github.io/difference-between-compile-and-interpret">&lt;!--&lt;span class=&quot;table-of-contents-list&quot;&gt;This is Python table of contents &lt;/span&gt;
&lt;ul class=&quot;table-of-contents-list&quot;&gt;
    &lt;li&gt;&lt;a href=&quot;./frontend-basic&quot;&gt;front-end-basic&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./python-control-statement&quot;&gt;front-end-control-statement&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;--&gt;

&lt;p&gt;Compiler is translating the whole codes by advanced language to machine language at one time.
In other words, it collects commands once they read the whole source code, and re-organize it.
So, it takes long time for translating, but it takes short time to activate the code file after
translating.&lt;/p&gt;

&lt;p&gt;Interpreter is translating the sourcodes line by line to machine language, so it takes short time
for translating. However, it should do translate the codes every single time whenever they execute the file. Because of this, interpreter languages are slower than compiler.&lt;/p&gt;

&lt;p&gt;These features seem like compiler is better than intrpreter. However, here is the thing why we
use interpreter as well.&lt;/p&gt;

&lt;p&gt;Interpreter is not obsessed by each hardware, but compiler is. Hardware obsession is 
quite a big deal when we consider this software is working on different hardware.&lt;/p&gt;

&lt;p&gt;For example, cpu A is not compatible with cpu B.&lt;/p&gt;

&lt;p&gt;Compiler is translating advanced language to machine language directly, so the compiled software
in A is not properly working in B. In this case, developers should make the software
in B environment as well.&lt;/p&gt;

&lt;p&gt;However, interpreter is translating advanced language to bytecode (or intermediate code)
during interpreting time, and the virtual machine depending on what language uses translates
the bytecodes to machine language being suitable for B hardware environment.&lt;/p&gt;

&lt;p&gt;Python is interpreter language, C languages are compile language,
this is why c is a programming language for hardware control system.&lt;/p&gt;

&lt;p&gt;However, Java is compile and interpreter language. In java, java compiler translates .java file into .class file by bytecode, and java virtual machine(java interpreter) is translating bytecode to object codes.&lt;/p&gt;</content><author><name>Siyoon Jung</name></author><category term="front-end" /><summary type="html"></summary></entry><entry><title type="html">Browser operating principle</title><link href="https://lulubeanana17.github.io/frontend-basic" rel="alternate" type="text/html" title="Browser operating principle" /><published>2021-09-16T04:40:00+12:00</published><updated>2021-09-16T04:40:00+12:00</updated><id>https://lulubeanana17.github.io/frontend-basic</id><content type="html" xml:base="https://lulubeanana17.github.io/frontend-basic">&lt;!--&lt;span class=&quot;table-of-contents-list&quot;&gt;This is Python table of contents &lt;/span&gt;
&lt;ul class=&quot;table-of-contents-list&quot;&gt;
    &lt;li&gt;&lt;a href=&quot;./frontend-basic&quot;&gt;front-end-basic&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./python-control-statement&quot;&gt;front-end-control-statement&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;--&gt;

&lt;p&gt;Our website consists of front-end and back-end. Front-end is about design aspect, which is made by html, css, and javascript or other frameworks. Back-end is about a structure that is invisible (like a pipeline behind a wall), it manages the website’s data.&lt;/p&gt;

&lt;p&gt;The website is based on a browser, which supports internet environment to users. For example, we can say the browsers are expo stadium and the websites are booths in there for any kind of purpose.&lt;/p&gt;

&lt;p&gt;Every website owners have the websites’ original file, it only can make any change to actual website showing on internet when the original files are changed and pushed to server.&lt;/p&gt;

&lt;p&gt;The browsers (chrome, safari ..etc) play a client role that is like expo stadium. When users surf on the internet through a browser and find a website that he/she want to have a look. When they click the website, the browser (called a client) request a server that stores the website’s file, get the copy, and show it to the user. Moreover, the copied files can be scalable and changable because it is just copy.&lt;/p&gt;

&lt;p&gt;Additionally, most website owners rent the server for deploying their website, because it costs a lot of money to execute their own server by themselves.&lt;/p&gt;</content><author><name>Siyoon Jung</name></author><category term="front-end" /><summary type="html"></summary></entry><entry><title type="html">back-end-basic</title><link href="https://lulubeanana17.github.io/backend-basic" rel="alternate" type="text/html" title="back-end-basic" /><published>2021-09-15T04:40:00+12:00</published><updated>2021-09-15T04:40:00+12:00</updated><id>https://lulubeanana17.github.io/backend-basic</id><content type="html" xml:base="https://lulubeanana17.github.io/backend-basic">&lt;p&gt;This is the first post.&lt;/p&gt;</content><author><name>Siyoon Jung</name></author><category term="back-end" /><summary type="html">This is the first post.</summary></entry><entry><title type="html">the difference between front-end and back-end</title><link href="https://lulubeanana17.github.io/frontend-control-statement" rel="alternate" type="text/html" title="the difference between front-end and back-end" /><published>2021-09-15T04:40:00+12:00</published><updated>2021-09-15T04:40:00+12:00</updated><id>https://lulubeanana17.github.io/frontend-control-statement</id><content type="html" xml:base="https://lulubeanana17.github.io/frontend-control-statement">&lt;!--&lt;span class=&quot;table-of-contents-list&quot;&gt;This is Python table of contents &lt;/span&gt;
&lt;ul class=&quot;table-of-contents-list&quot;&gt;
    &lt;li&gt;&lt;a href=&quot;./frontend-basic&quot;&gt;front-end-basic&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;./python-control-statement&quot;&gt;front-end-control-statement&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;--&gt;

&lt;p&gt;A website itself is made of front-end part and back-end part. Front-end part is visual thing, they show UI, a design that they did.&lt;/p&gt;

&lt;p&gt;In front-end, there are roughly three languages in (honestly even though html and css are not programming language). HTML is a structure of the website, also it is called bones in human body. CSS is a design aspect, it adds design aspects to the well-made html structure, it shows them better. Lastly, Javascript can make them have a movement, it creates moving features in their website. In Javascript section, they have Vanila.JS which is a pure Javascript, and also have some frameworks, such as React, Vue ..etc, when they work in an easier way.&lt;/p&gt;

&lt;p&gt;In back-end, they manage the behind of websites, it is invisible. It can be said as Staffs working in any kind of show behind the curtain. They roughly have database, cloud, and back-end software which is node.js, .NET ..etc. Database can be operated by mongodb, mysql ..etc. they control the database for any data input through their website. Cloud can make our environment on virtual, we can upload or download without a geographical limitation. It has AWS, Azure ..etc.&lt;/p&gt;</content><author><name>Siyoon Jung</name></author><category term="front-end" /><summary type="html"></summary></entry></feed>